[Error]
enum PasskeyError {
    "InvalidUri",
    "RuntimeError",
    "GenerationError",
    "ResolveChallengeError",
    "SerializationError"
};

dictionary CreatePasskeyResponse {
    string response;
    bytes passkey;
    string key_id;
    string domain;
    string? rp_id;
    string rp_name;
    string user_name;
    string user_display_name;
    bytes user_id;
    bytes credential_id;
    bytes? user_handle;
};

dictionary CreatePasskeyIosResponse {
    bytes passkey;
    string key_id;
    string domain;
    string? rp_id;
    string rp_name;
    string user_name;
    string user_display_name;
    bytes user_id;
    bytes credential_id;
    bytes client_data_hash;
    bytes? user_handle;
    bytes attestation_object;
};

dictionary CreatePasskeyData {
    string? rp_id;
    string rp_name;
    string user_name;
    string user_display_name;
};

dictionary CreatePasskeyIosRequest {
    string service_identifier;
    string rp_id;
    string user_name;
    bytes user_handle;
    bytes client_data_hash;
    sequence<i64> supported_algorithms;
};

dictionary AuthenticateWithPasskeyIosRequest {
    string service_identifier;
    bytes passkey;
    bytes client_data_hash;
};

dictionary AuthenticateWithPasskeyIosResponse {
    bytes user_handle;
    string relying_party;
    bytes signature;
    bytes client_data_hash;
    bytes authenticator_data;
    bytes credential_id;
};

dictionary AuthenticateWithPasskeyAndroidRequest {
    string origin;
    string request;
    bytes passkey;
    bytes client_data_hash;
};

interface PasskeyManager {
    [Throws=PasskeyError]
    constructor();

    [Throws=PasskeyError]
    CreatePasskeyResponse generate_passkey(string url, string request);

    [Throws=PasskeyError]
    CreatePasskeyIosResponse generate_ios_passkey(CreatePasskeyIosRequest request);

    [Throws=PasskeyError]
    string resolve_challenge_for_android(AuthenticateWithPasskeyAndroidRequest request);

    [Throws=PasskeyError]
    AuthenticateWithPasskeyIosResponse resolve_challenge_for_ios(AuthenticateWithPasskeyIosRequest request);

    [Throws=PasskeyError]
    CreatePasskeyData parse_create_request(string request);
};
