[Error]
enum PasswordGeneratorError {
    "FailToGenerate",
};

dictionary RandomPasswordConfig {
    u32 length;
    boolean numbers;
    boolean uppercase_letters;
    boolean symbols;
};

interface RandomPasswordGenerator {
    constructor();
    [Throws=PasswordGeneratorError]
    string generate(RandomPasswordConfig config);
};

enum WordSeparator {
    "Hyphens",
    "Spaces",
    "Periods",
    "Commas",
    "Underscores",
    "Numbers",
    "NumbersAndSymbols",
};

dictionary PassphraseConfig {
    WordSeparator separator;
    boolean capitalise;
    boolean include_numbers;
    u32 count;
};

interface PassphraseGenerator {
    constructor();
    [Throws=PasswordGeneratorError]
    sequence<string> random_words(u32 word_count);
    [Throws=PasswordGeneratorError]
    string generate_passphrase(sequence<string> words, PassphraseConfig config);
    [Throws=PasswordGeneratorError]
    string generate_random_passphrase(PassphraseConfig config);
};

enum PasswordScore {
    "Weak",
    "Strong",
    "Invulnerable",
};

interface PasswordScorer {
    constructor();
    PasswordScore check_score(string password);
};