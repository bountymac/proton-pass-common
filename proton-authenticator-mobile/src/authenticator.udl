[Traits=(Debug)]
interface AuthenticatorError {
  string message();
};

dictionary AuthenticatorCodeResponse {
  string current_code;
  string next_code;
};

interface AuthenticatorEntryActions {
  string entry_type();

  [Throws=AuthenticatorError]
  AuthenticatorCodeResponse generate_code(u64 time);

  [Throws=AuthenticatorError]
  bytes serialize();
};

dictionary AuthenticatorEntryModel {
  string name;
  string uri;
  u16 period;
  string? note;
  AuthenticatorEntryActions actions;
};

enum AuthenticatorTotpAlgorithm {
  "SHA1",
  "SHA256",
  "SHA512"
};

dictionary AuthenticatorEntryTotpCreateParameters {
  string name;
  string secret;
  string issuer;
  u16 period;
  u8 digits;
  AuthenticatorTotpAlgorithm algorithm;
  string? note;
};

dictionary AuthenticatorEntrySteamCreateParameters {
  string name;
  string secret;
  string? note;
};

interface AuthenticatorMobileClient {
  constructor();

  [Throws=AuthenticatorError]
  AuthenticatorEntryModel entry_from_uri(string uri);

  [Throws=AuthenticatorError]
  AuthenticatorEntryModel new_totp_entry_from_params(AuthenticatorEntryTotpCreateParameters params);

  [Throws=AuthenticatorError]
  AuthenticatorEntryModel new_steam_entry_from_params(AuthenticatorEntrySteamCreateParameters params);

  [Throws=AuthenticatorError]
  sequence<AuthenticatorCodeResponse> generate_codes(sequence<AuthenticatorEntryModel> entries, u64 time);

  [Throws=AuthenticatorError]
  sequence<bytes> serialize_entries(sequence<AuthenticatorEntryModel> entries);

  [Throws=AuthenticatorError]
  sequence<AuthenticatorEntryModel> deserialize_entries(sequence<bytes> serialized);

  [Throws=AuthenticatorError]
  string export_entries(sequence<AuthenticatorEntryModel> entries);
};
